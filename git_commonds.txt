1.GIT bash

2.配置某台机器的全局环境，该机器上所有git repo都会使用这个配置。
	git config --global user.name "your name"
	git config --global user.email "emai.@example.com"

3.创建本地版本库，首先在想要创建该版本库的目录位置下打开GIT bash.
	mkdir learngit  #创建git仓库对应文件夹
	cd learngit 	#切换到该目录
	git init		#初始化git仓库，会生成.git文件夹，git仓库创建成功。

4.git add readme.txt	emptyfile.txt		#添加到缓存区
  git commit -m "change information" 		#提交到仓库
  git status								#查看当前状态
  git diff readme.txt 						#查看文件中修改的地方

5.版本回退，撤销修改
	git log		#查看由近到远的提交日志
	git log --pretty=oneline	#每次提交日志独行显示
	git reflog		#查看历史命令
	文件被修改但未add，即丢弃工作区中修改。
		git checkout -- readme.txt
	文件被修改并且已经add，但未commit。即丢弃暂存区的修改，重新放回工作区。
		git reset HEAD readme.txt
		git checkout -- readme.txt
	文件被修改被add且被commit，因此可以通回退到上一个版本来恢复
		git reset --hard HEAD^
	删除文件
		rm test.txt		#工作区删除，版本库中还保留 git checkout -- test.txt 可恢复
		git rm test.txt
		git commit -m "delete test.txt"		#版本库中删除

6.远程管理（github）
	创建SSH-Key: ssh-keygen -t rsa -C "youremail@example.com"
	将id_rsa_pub添加到github账户SSH Key，这样github账户就可以通过公钥验证通过本电脑的提交。
	查看远程库信息：git remote -v
	本地库与远程库同步：
		在GitHub创建同名库gitskills
		将本地库与远程库关联：
			git remote add origin git@github.com:lyk109/gitskills.git
		将本地库推送到远程库：
			git push -u origin master #第一次需要-u后面可不加
	远程库克隆到本地
		在GitHub创建库gitskills
		将该库克隆到本地：
			git clone git@github.com:lyk109/gitskills.git  #默认情况只能看到master分支
			git checkout -b dev master/dev   #创建本地dev分支
			git push origin dev				 #将dev分支推送到远程
			git pull origin dev				 #将远程分支与本地分支合并
			git branch --set-upstream dev origin/dev 	#设置dev与origin/dev链接
			
7.分支管理
	创建并切换分支：git checkout -b dev. 等同于：
		git branch dev
		git checkout dev
	查看有哪些分支以及当前工作分支：git branch
	合并dev到master分支：
		git checkout master #首先切换到master分支
		git merge dev  #默认--ff，可选--no-ff
	合并后删除不用分支：git branch -d dev
	查看分支合并图：git log --graph --pretty=oneline --abbrev-commit

8.把当前的工作现场暂存
	git stash
	查看暂存的工作：git stash list
	恢复最近暂存的工作并从git stash list中删除：git stash pop
	恢复最近暂存的工作但不从git stash list中删除：git stash apply
	从git stash list中删除： git stash drop
	
9.标签管理
	查看所有标签：git tag
	对当前分支最近一份commit打标签： git tag v1.0
	对某个commit打标签: git tag v0.9 5db9b07
	显示标签信息：git show v1.0
	创建带有说明文件的标签：git tag -a v0.1 -m "description information" 5sb9b07
	删除标签：git tag -d v0.1
	推送某个标签到远程： git push origin v1.0
	一次性推送所有未推送标签到远程： git push origin --tags
	删除远程标签： 
		先从本地删除： git tag -d v1.0
		然后从远程删除：git push :refs/tags/v1.0
	
	

	
		
		